<UserControl x:Class="ATSQuadroStrategyBase.GUI.UserControlEasyConfig"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ATSQuadroStrategyBase.GUI"
             xmlns:wpfPropertyGrid="http://schemas.denisvuyka.wordpress.com/wpfpropertygrid"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
            <Style x:Key="ButtonStyleSmall1" TargetType="{x:Type Button}">
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="MinWidth" Value="60" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="True">
                                    <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                                </Trigger>
                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.MouseOver.Background}" />
                                    <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.Pressed.Background}" />
                                    <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.Disabled.Background}" />
                                    <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="UserControlStyle1" TargetType="{x:Type UserControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type UserControl}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="TabControlControlTemplate1" TargetType="{x:Type TabControl}">
                <Grid Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Name="ColumnDefinition0" />
                        <ColumnDefinition Name="ColumnDefinition1" Width="0" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Name="RowDefinition0" Height="Auto" />
                        <RowDefinition Name="RowDefinition1" Height="*" />
                    </Grid.RowDefinitions>
                    <TabPanel Name="HeaderPanel" Background="#00FFFFFF" Grid.Column="0" IsItemsHost="True" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" ZIndex="1" />
                    <Border Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                        <ContentPresenter Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                        <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,0,2,2" />
                    </Trigger>
                    <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                        <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                        <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
                        <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
                        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                        <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,2,0,2" />
                    </Trigger>
                    <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                        <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                        <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
                        <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
                        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                        <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="0,2,2,2" />
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <Border BorderBrush="#00FFFFFF" HorizontalAlignment="Stretch" Width="auto" Padding="0" Margin="0" VerticalAlignment="Stretch" BorderThickness="0" SnapsToDevicePixels="True">
        <Grid Name="grdMain" Opacity="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" MinWidth="550" MinHeight="550">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Name="RowTemplateHeader" Height="auto" />
                <RowDefinition Name="RowTemplateControls" Height="auto" />
                <RowDefinition Name="RowPropertyGridControls" Height="auto" />
            </Grid.RowDefinitions>
            <Grid Name="grdTemplateInfo" Row="0" Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1" />
                    <ColumnDefinition Width="0.25*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                </Grid.RowDefinitions>
                <Label Name="lblSettingID" Grid.Row="0" Grid.Column="1" Content="Template:" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.ColumnSpan="1" Foreground="#FFFFFFFF" />
                <Label Grid.Column="2" Grid.ColumnSpan="2" Margin="5,3,0,3" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FFFFFFFF" Width="Auto" Padding="0" Opacity="1" Content="{Binding TemplateNameDisplay, Mode=OneWay}" />
            </Grid>
            <Grid Name="grdButtonsEntry" Row="1" Margin="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="35" />
                </Grid.RowDefinitions>
                <Button Name="BtnLoad" Content="Load" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" Style="{DynamicResource ButtonStyleSmall1}" Click="BtnLoad_Click"  />
                <Button Name="BtnRefresh" Content="Refresh" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="1" Style="{DynamicResource ButtonStyleSmall1}" Click="BtnRefresh_Click"  />
                <Button Name="BtnSave" Content="Save" Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="1" Style="{DynamicResource ButtonStyleSmall1}" Click="BtnSave_Click"  />
                <Button Name="BtnSaveAs" Content="Save As" Grid.Row="0" Grid.Column="4" Grid.ColumnSpan="1" Style="{DynamicResource ButtonStyleSmall1}" Click="BtnSaveAs_Click"  />
                <Button Name="BtnOk" Content="Ok" Grid.Row="0" Grid.Column="6" Grid.ColumnSpan="1" Style="{DynamicResource ButtonStyleSmall1}" Click="BtnOk_Click"  />
                <Button Name="BtnApply" Content="Apply" Grid.Row="0" Grid.Column="7" Grid.ColumnSpan="1" Style="{DynamicResource ButtonStyleSmall1}" Click="BtnApply_Click"  />
                <Button Name="BtnCancel" Content="Cancel" Grid.Row="0" Grid.Column="8" Grid.ColumnSpan="1" Style="{DynamicResource ButtonStyleSmall1}" Click="BtnCancel_Click"  />
                <Button Name="BtnClose" Content="Close" Grid.Row="0" Grid.Column="9" Grid.ColumnSpan="1" Style="{DynamicResource ButtonStyleSmall1}" Visibility="Hidden"  />
                <Button Name="BtnRestart" Content="Restart" Grid.Row="0" Grid.Column="9" Grid.ColumnSpan="1" Style="{DynamicResource ButtonStyleSmall1}" Click="BtnRestart_Click"  />
            </Grid>
            <TabControl Name="TabControlMain" HorizontalAlignment="Stretch" Grid.Row="2" MinHeight="500" Height="Auto" Margin="0" MinWidth="550" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5" Padding="0" Template="{DynamicResource TabControlControlTemplate1}">
                <UIElement.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="0" />
                        <TranslateTransform />
                    </TransformGroup>
                </UIElement.RenderTransform>
                <TabItem Name="TabSetup" Header="Setup">
                    <Grid Name="GridSetup">
                        <ScrollViewer x:Name="GirdSetup" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <wpfPropertyGrid:PropertyGrid Name="PropertyGrid1" ShowReadOnlyProperties="True" ShouldPersistCategoryExpandedState="False" />
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem Header="Entry Filters">
                    <Grid Name="GridEntryFilters">
                        <ScrollViewer x:Name="ScrollViewerFilters" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <wpfPropertyGrid:PropertyGrid Name="PropertyGrid2" ShowReadOnlyProperties="True" ShouldPersistCategoryExpandedState="False" />
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem Header="Exits">
                    <Grid Name="GridExits">
                        <ScrollViewer x:Name="ScrollViewerExits" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <wpfPropertyGrid:PropertyGrid Name="PropertyGrid3" ShowReadOnlyProperties="True" ShouldPersistCategoryExpandedState="False" />
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem Header="HTF">
                    <Grid Name="GridHTF">
                        <ScrollViewer x:Name="ScrollViewerHTF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <wpfPropertyGrid:PropertyGrid Name="PropertyGrid4" ShowReadOnlyProperties="True" ShouldPersistCategoryExpandedState="False" />
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem Header="Trade Man.">
                    <Grid Name="GridTradeMan">
                        <ScrollViewer x:Name="ScrollViewerTradeMan" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <wpfPropertyGrid:PropertyGrid Name="PropertyGrid5" ShowReadOnlyProperties="True" ShouldPersistCategoryExpandedState="False" />
                        </ScrollViewer>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </Border>
</UserControl>